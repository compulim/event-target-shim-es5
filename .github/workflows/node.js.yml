# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: echo ${{ github.ref }}

      - run: npx version-from-git --no-git-tag-version
        if: ${{ startsWith(github.ref, 'refs/heads/') }}

      - run: npm ci

      - run: npm run build --if-present

      - run: npm test

      - run: rm -r lib

      - run: npm pack

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == '14.x' }}
        with:
          name: npm-tarball
          path: '*.tgz'

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: npm-tarball

      - run: 'tar xvf *.tgz'

      - name: Get package.json version
        id: get-package-version
        run: |
          cd package
          echo "::set-output name=version::`cat package.json | jq -r '.version'`"

      - run: echo ${{ steps.get-package-version.outputs.version }}

      - name: Run npm publish
        run: |
          cd package
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN

      - uses: actions/create-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.get-package-version.outputs.version }}
          draft: true
