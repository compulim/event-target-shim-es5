# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'

  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Checking out for ${{ github.ref }}
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npx version-from-git --no-git-tag-version
        if: ${{ startsWith(github.ref, 'refs/heads/') }}

      - run: npm ci

      - run: npm run prepublishOnly --if-present

      # This package requires /lib to be removed before packaging
      - run: rm -r lib

      - run: npm pack

      - name: Pack github-pages
        if: ${{ matrix.node-version == '16.x' }}
        run: |
          cp dist/* public
          cd public

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: e2e-tests
          path: '__e2e__/**/*'

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: gh-pages
          path: 'public/**/*'

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: npm-tarball
          path: '*.tgz'

  test-linux:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # NPM@7 is buggy right now, we will use NPM@6 until Node.js 16.x go LTS.
      - name: Use NPM@6 on Node.js 16.x
        if: ${{ matrix.node-version == '16.x' }}
        run: npm i -g npm@6 --registry=https://registry.npmjs.org

      - uses: actions/download-artifact@v2
        with:
          name: e2e-tests

      - uses: actions/download-artifact@v2
        with:
          name: npm-tarball

      - name: Install dependencies
        run: |
          mv *.tgz package.tgz
          npm install

      - name: Run tests
        run: npm test

  test-windows:
    needs: build
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # NPM@7 is buggy right now, we will use NPM@6 until Node.js 16.x go LTS.
      - name: Use NPM@6 on Node.js 16.x
        if: ${{ matrix.node-version == '16.x' }}
        run: npm i -g npm@6 --registry=https://registry.npmjs.org

      - uses: actions/download-artifact@v2
        with:
          name: e2e-tests

      - uses: actions/download-artifact@v2
        with:
          name: npm-tarball

      - name: Install dependencies
        run: |
          ren *.tgz package.tgz
          npm install

      - name: Run tests
        run: npm test

  publish-pages:
    if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}

    needs:
      - build
      - test-linux
      - test-windows

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: gh-pages

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .

  publish-npm:
    if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}

    needs:
      - build
      - test-linux
      - test-windows

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: npm-tarball

      - name: Read package.json
        id: read-package-json
        run: |
          echo "::set-output name=name::$(tar xOf *.tgz package/package.json | jq -r '.name')"
          echo "::set-output name=version::$(tar xOf *.tgz package/package.json | jq -r '.version')"
          echo "::set-output name=tarball::$(ls *.tgz)"
          echo "::set-output name=date::$(date +%Y-%m-%d)"

      - name: Run npm publish ${{ steps.read-package-json.outputs.name }}@${{ steps.read-package-json.outputs.version }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm publish *.tgz --tag master

      - name: Run npm dist-tag add ${{ steps.read-package-json.outputs.name }}@${{ steps.read-package-json.outputs.version }} latest
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          npm dist-tag add ${{ steps.read-package-json.outputs.name }}@${{ steps.read-package-json.outputs.version }} latest

      - uses: actions/create-release@v1
        id: create-release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: '[${{ steps.read-package-json.outputs.version }}] - ${{ steps.read-package-json.outputs.date }}'
          draft: true

      - uses: actions/upload-release-asset@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ steps.read-package-json.outputs.tarball }}
          asset_name: ${{ steps.read-package-json.outputs.tarball }}
          asset_content_type: application/octet-stream
